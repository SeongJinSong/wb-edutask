plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'application'
}

group = 'com.wb'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Web Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Spring Boot Data JPA Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    // Spring Boot Validation Starter
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // H2 Database (런타임)
    runtimeOnly 'com.h2database:h2'
    
    // JAXB Runtime (Java 11+에서 필요)
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    runtimeOnly 'org.glassfish.jaxb:jaxb-core:4.0.5'
    runtimeOnly 'org.glassfish.jaxb:txw2:4.0.5'
    
    // Spring Boot DevTools (개발용)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Spring Boot Test Starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // Spring Boot Testcontainers (테스트용)
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    
    // Testcontainers JUnit Jupiter
    testImplementation 'org.testcontainers:junit-jupiter'
    
    // Lombok (선택사항 - 코드 간소화)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Gradle Wrapper 설정
wrapper {
    gradleVersion = '8.10.2'
    distributionType = Wrapper.DistributionType.ALL
}

// Java 컴파일 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
}

// JAR 파일 설정
jar {
    enabled = false
    archiveClassifier = ''
}

// Spring Boot JAR 설정
bootJar {
    archiveBaseName = 'wb-edutask'
    archiveVersion = '1.0.0'
    archiveClassifier = ''
}

// 애플리케이션 실행 설정
application {
    mainClass = 'com.wb.edutask.WbEdutaskApplication'
}

// 개발 서버 설정
bootRun {
    jvmArgs = [
        '-Xmx1024m',
        '-Xms512m',
        '-Dspring.profiles.active=dev'
    ]
}

// 테스트 설정
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
